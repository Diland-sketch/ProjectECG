<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="#2E2E2E" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="Aqua" />
        <Setter Property="RowBackground" Value="#383838" />
        <Setter Property="AlternatingRowBackground" Value="#2A2A2A" />
        <Setter Property="HorizontalGridLinesBrush" Value="#444" />
        <Setter Property="VerticalGridLinesBrush" Value="#444" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="ColumnHeaderHeight" Value="35" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="Aqua" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="BorderBrush" Value="#444" />
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="#383838" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="#444" />
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                    <Setter Property="FontSize" Value="14" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Aqua" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="BtnStyle"
         TargetType="RadioButton">

        <Setter Property="HorizontalAlignment"
              Value="Center" />
        <Setter Property="VerticalAlignment"
              Value="Center" />
        <Setter Property="Margin"
              Value="0,5,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">

                    <Border x:Name="border"
                          Height="50"
                          Width="228"
                          BorderThickness="0">

                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground"
                                           Color="#272B2F" />
                        </Border.Background>

                        <Grid>

                            <Border x:Name="Indicator"
                                  Height="35"
                                  Width="4"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Background="#FFFFFF"
                                  Visibility="Collapsed"
                                  CornerRadius="2" />

                            <ContentPresenter />

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                               Value="True">

                            <Setter Property="Visibility"
                                  TargetName="Indicator"
                                  Value="Visible" />

                        </Trigger>

                        <EventTrigger RoutedEvent="Border.MouseEnter"
                                    SourceName="border">

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                  Storyboard.TargetProperty="Color"
                                                  From="#272B2F"
                                                  To="#3E434A"
                                                  Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>

                        <EventTrigger RoutedEvent="Border.MouseLeave"
                                    SourceName="border">

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                  Storyboard.TargetProperty="Color"
                                                  From="#3E434A"
                                                  To="#272B2F"
                                                  Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>

                        <Trigger Property="IsChecked"
                               Value="True">

                            <Setter Property="Background"
                                  TargetName="border"
                                  Value="#212529" />

                            <Setter Property="Visibility"
                                  TargetName="Indicator"
                                  Value="Visible" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <Style x:Key="BtnStyle2"
      TargetType="Button">

        <Setter Property="HorizontalAlignment"
           Value="Center" />
        <Setter Property="VerticalAlignment"
           Value="Center" />
        <Setter Property="Margin"
           Value="0,5,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">

                    <Border x:Name="border"
                       Height="50"
                       Width="228"
                       BorderThickness="0">

                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground"
                                        Color="#272B2F" />
                        </Border.Background>

                        <Grid>

                            <Border x:Name="Indicator"
                               Height="35"
                               Width="4"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Background="#FFFFFF"
                               Visibility="Collapsed"
                               CornerRadius="2" />

                            <ContentPresenter />

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                            Value="True">

                            <Setter Property="Visibility"
                               TargetName="Indicator"
                               Value="Visible" />

                        </Trigger>

                        <EventTrigger RoutedEvent="Border.MouseEnter"
                                 SourceName="border">

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                               Storyboard.TargetProperty="Color"
                                               From="#272B2F"
                                               To="#3E434A"
                                               Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>

                        <EventTrigger RoutedEvent="Border.MouseLeave"
                                 SourceName="border">

                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                               Storyboard.TargetProperty="Color"
                                               From="#3E434A"
                                               To="#272B2F"
                                               Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>

                        <Trigger Property="IsChecked"
                            Value="True">

                            <Setter Property="Background"
                               TargetName="border"
                               Value="#212529" />

                            <Setter Property="Visibility"
                               TargetName="Indicator"
                               Value="Visible" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="SubMenuButtonStyle" TargetType="Button">
        <!-- Fondo y colores principales -->
        <Setter Property="Background" Value="#444" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />

        <!-- Alineación y espaciado -->
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="Padding" Value="10,3" />

        <!-- Tipografía -->
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="Segoe UI" />

        <!-- Comportamiento -->
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <!-- Border con nombre explícito -->
                    <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="3" BorderThickness="1" BorderBrush="#555">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>

                    <!-- Efectos al interactuar -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#555" />
                            <Setter Property="Foreground" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#222" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BtnStyleSearch" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Height="50"
                        Width="228"
                        BorderThickness="0">
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground" Color="#272B2F" />
                        </Border.Background>
                        <Grid>
                            <Border x:Name="Indicator"
                                Height="35"
                                Width="4"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="#FFFFFF"
                                Visibility="Collapsed"
                                CornerRadius="2" />
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Visible" />
                        </Trigger>
                        <EventTrigger RoutedEvent="Border.MouseEnter" SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                Storyboard.TargetProperty="Color"
                                                From="#272B2F"
                                                To="#3E434A"
                                                Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Border.MouseLeave" SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                Storyboard.TargetProperty="Color"
                                                From="#3E434A"
                                                To="#272B2F"
                                                Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#212529" />
                            <Setter Property="Visibility" TargetName="Indicator" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Tag" Value="Checked">
                            <!-- Usar propiedad Tag para simular IsChecked -->
                            <Setter Property="Background" TargetName="border" Value="#212529" />
                            <Setter Property="Visibility" TargetName="Indicator" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    


    <Style x:Key="BtnStyleSearch3" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Height="50"
                        Width="228"
                        BorderThickness="0">
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground" Color="#272B2F" />
                        </Border.Background>

                        <Grid>
                            <Border x:Name="Indicator"
                                Height="35"
                                Width="4"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="#FFFFFF"
                                Visibility="Collapsed"
                                CornerRadius="2" />
                            <!-- Centrar el texto -->
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Visible" />
                        </Trigger>

                        <EventTrigger RoutedEvent="Border.MouseEnter" SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                Storyboard.TargetProperty="Color"
                                                From="#272B2F"
                                                To="#3E434A"
                                                Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Border.MouseLeave" SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                Storyboard.TargetProperty="Color"
                                                From="#3E434A"
                                                To="#272B2F"
                                                Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#212529" />
                            <Setter Property="Visibility" TargetName="Indicator" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="#272B2F"/>
        <Setter Property="Padding" Value="0,0,0,5"/>
        <Setter Property="BorderThickness" Value="0"/>

        <!-- Establecer la plantilla del control -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <!-- Contenido del TextBox -->
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent"/>

                        <!-- Línea inferior -->
                        <Border x:Name="Underline"
                            Height="2"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Background="Aqua"
                            CornerRadius="1"/>
                    </Grid>

                    <!-- Definir los triggers -->
                    <ControlTemplate.Triggers>
                        <!-- Cambiar el color de la línea al pasar el ratón -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Underline" Property="Background" Value="LimeGreen"/>
                        </Trigger>

                        <!-- Cambiar el color de la línea al hacer clic en el TextBox -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Underline" Property="Background" Value="white"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Estilo para el RadioButton Masculino -->
    <Style x:Key="MaleRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                        <Border x:Name="MaleBorder" Width="60" Height="60" CornerRadius="30" Background="Transparent">
                            <Image Source="pack://application:,,,/Images/masculino.png" Width="50" Height="50" Stretch="Uniform"/>
                        </Border>
                        <TextBlock Text="Masculino" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,5,0,0"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="MaleBorder" Property="Background" Value="Aqua"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MaleBorder" Property="Background" Value="#3E434A"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Estilo para el RadioButton Femenino -->
    <Style x:Key="FemaleRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                        <Border x:Name="FemaleBorder" Width="60" Height="60" CornerRadius="30" Background="Transparent">
                            <Image Source="pack://application:,,,/Images/femenino.png" Width="50" Height="50" Stretch="Uniform"/>
                        </Border>
                        <TextBlock Text="Femenino" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,5,0,0"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="FemaleBorder" Property="Background" Value="Aqua"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="FemaleBorder" Property="Background" Value="#3E434A"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Estilo para el TextBlock de etiquetas -->
    <Style x:Key="LabelTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Width" Value="222"/>
    </Style>

    <!-- Estilo para el DatePicker -->
    <Style x:Key="CustomDatePickerStyle" TargetType="DatePicker">
        <Setter Property="Width" Value="290"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="#272B2F"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Green"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="5,2,5,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <StackPanel Orientation="Horizontal">
                            <DatePickerTextBox x:Name="PART_TextBox"
                                               Background="Transparent"
                                               Foreground="{TemplateBinding Foreground}"
                                               BorderThickness="0"
                                               VerticalContentAlignment="Center"/>
                            <Button x:Name="PART_Button"
                                    Background="Transparent"
                                    Width="24"
                                    BorderThickness="0"
                                    ToolTip="Seleccionar Fecha">
                                <Image Source="pack://application:,,,/GUI/Images/calendar_icon.png" Width="16" Height="16"/>
                            </Button>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush x:Key="close_app_def"
              ImageSource="/Images/shutdown_def.png"
              Stretch="None" />

    <ImageBrush x:Key="close_app_mo"
              ImageSource="/Images/shutdown_mo.png"
              Stretch="None" />

    <Style x:Key="ExitApp"
         TargetType="{x:Type Button}">

        <Setter Property="Height"
              Value="40" />
        <Setter Property="Width"
              Value="40" />
        <Setter Property="HorizontalAlignment"
              Value="Right" />
        <Setter Property="VerticalAlignment"
              Value="Top" />
        <Setter Property="Margin"
              Value="0,15,15,0" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                          BorderThickness="0"
                          Background="{StaticResource close_app_def}">

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                               Value="True">

                            <Setter Property="Background"
                                  TargetName="border"
                                  Value="{StaticResource close_app_mo}" />

                        </Trigger>

                        <Trigger Property="IsPressed"
                               Value="True">

                            <Setter Property="Background"
                                  TargetName="border"
                                  Value="{StaticResource close_app_mo}" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>


</ResourceDictionary>